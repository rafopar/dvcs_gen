{
TGenPi0 *gEv=new TGenPi0(5.75,0,8276,298635);
gEv->SetTargetParam(15.,0.0723);
gEv->SetGeometry(0.4173,2.35,0.258527,1100.);
gEv->Settmin(-2.);
//gEv->SetFermi();
Int_t nev=400;
Int_t j=0;
//cout<<"Generating "<<nev<<" events..."<<endl;

for(Int_t i=0;i<nev;i++){
 gEv->Settmin(0.);
 gEv->Settmax(-1.);
 gEv->GenerateVertex();//Generates the vertex
 gEv->ExtBrem();//Make external pre-vertex radiative corrections
 gEv->GenKin();//Computes scattered electron kinematics
 gEv->IntRCBef();//Internal radiative corrections (before vertex)
 //gEv->GenFermiIni();//To use if fFermi is set
 gEv->ComputeElectron();//Compute the scattered electron 4-vector
 gEv->IntRCAft();//Internal radiative corrections (after vertex)
 if(gEv->HitsSpectro(gEv->GetScatteredElectron())){//Check hor spectro accep.
   gEv->ComputePi0();//Compute the gamma*p->pi0 p collision
   //cout<<"Event number : "<<i<<endl;
   gEv->TwoBodyDecay(0.1349766,0.,0.);
   gEv->ApplySpecVerAcc();//Rotates all final vectors around the beam axis
   if(gEv->HitsCalo(gEv->GetFinalPhoton1())||gEv->HitsCalo(gEv->GetFinalPhoton2())){//Checks calo acceptance
     if(gEv->HitsPA(gEv->GetFinalProton())){
       //gEv->Print();
       j++;
       gEv->Write2File();//This writes the event in a temporary file
     }
   }
 }
}
cout<<"j="<<j<<endl;
gEv->DumpFinalFile("outpi0.txt",nev,j);
}
